// Code generated by ent, DO NOT EDIT.

package training

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the training type in the database.
	Label = "training"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldTotalDuration holds the string denoting the total_duration field in the database.
	FieldTotalDuration = "total_duration"
	// FieldTextLength holds the string denoting the text_length field in the database.
	FieldTextLength = "text_length"
	// FieldInputsLength holds the string denoting the inputs_length field in the database.
	FieldInputsLength = "inputs_length"
	// FieldAccuracy holds the string denoting the accuracy field in the database.
	FieldAccuracy = "accuracy"
	// FieldSpeed holds the string denoting the speed field in the database.
	FieldSpeed = "speed"
	// Table holds the table name of the training in the database.
	Table = "trainings"
)

// Columns holds all SQL columns for training fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldDuration,
	FieldTotalDuration,
	FieldTextLength,
	FieldInputsLength,
	FieldAccuracy,
	FieldSpeed,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultDuration holds the default value on creation for the "duration" field.
	DefaultDuration int
	// DefaultTotalDuration holds the default value on creation for the "total_duration" field.
	DefaultTotalDuration int
	// DefaultTextLength holds the default value on creation for the "text_length" field.
	DefaultTextLength int
	// DefaultInputsLength holds the default value on creation for the "inputs_length" field.
	DefaultInputsLength int
	// DefaultAccuracy holds the default value on creation for the "accuracy" field.
	DefaultAccuracy int
	// DefaultSpeed holds the default value on creation for the "speed" field.
	DefaultSpeed int
)

// OrderOption defines the ordering options for the Training queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByDuration orders the results by the duration field.
func ByDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDuration, opts...).ToFunc()
}

// ByTotalDuration orders the results by the total_duration field.
func ByTotalDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTotalDuration, opts...).ToFunc()
}

// ByTextLength orders the results by the text_length field.
func ByTextLength(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTextLength, opts...).ToFunc()
}

// ByInputsLength orders the results by the inputs_length field.
func ByInputsLength(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInputsLength, opts...).ToFunc()
}

// ByAccuracy orders the results by the accuracy field.
func ByAccuracy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAccuracy, opts...).ToFunc()
}

// BySpeed orders the results by the speed field.
func BySpeed(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSpeed, opts...).ToFunc()
}
